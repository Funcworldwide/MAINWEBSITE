{%- assign buttonBlocks = section.blocks | where: 'type', 'Button' -%}


<style>
  #{{ section.id }} {
    font-size: 16px;
    padding-top: {{ section.settings.padding_top }}em;
    padding-bottom: {{ section.settings.padding_bottom }}em;
    background-color: {{ section.settings.bg_color }};
    {% if section.settings.image %}
      background: url("{{ section.settings.image | image_url }}") no-repeat center;
      background-size: cover;
      box-shadow: inset 0 0 0 2000px rgba(0, 0, 0, {{ section.settings.overlay }});
    {% endif %}
  }

  #{{ section.id }} .c-section-top-subheading,
  #{{ section.id }} div,
  #{{ section.id }} h2,
  #{{ section.id }} h3 {
    color: {{ section.settings.text_color }};
  }

  #{{ section.id }} .c-section-top {
    align-items: {{ section.settings.section_top_alignment }};
    text-align: {{ section.settings.text_alignment }};
  }

  #{{ section.id }} img {
    position: relative;
    top: 0px;
    left: 0px;
    width: 100%;
    object-fit: cover;
    {% if section.settings.use_fixed_height == true %}
      height: {{ section.settings.fixed_height }}vh;
    {% endif %}
  }

  #{{ section.id }} .c-rt-wrapper {
    display: flex;
    flex-direction: column;
    align-items: 
    {% case section.settings.blocks_alignment %}
      {% when 'Left' %}
        flex-start; text-align: left
      {% when 'Center' %}
        center; text-align: center
      {% when 'Right' %}
        flex-end; text-align: right
    {% endcase %};
    margin-right: auto;
    margin-left: auto;
    gap: 1em;
    width: {{ section.settings.section_width }}%;
  }

  #{{ section.id }} .c-rt-paragraph {
    margin-top: 0px;
    margin-bottom: 0px;
    font-size: 1.125em;
  }

  #{{ section.id }} .c-rt-timer {
    margin: 0 auto;
  }

  #{{ section.id }} .c-rt-timer {
    font-size: 3em;
    font-weight: 700;
    color: #C32127;
    text-align: center;
    display: inline-block;
    margin-left: auto;
    margin-right: auto;
  }
    
  #{{ section.id }} .c-rt-timer #timer-count {
    display: flex;
    gap: 1.5em;
    {%- if buttonBlocks != empty -%}margin-top: 20px;{%- endif -%}
  }

  @media (max-width: {{ settings.c_breakpoint3 }}px) {
    #{{ section.id }} {
      {% if section.settings.image_mobile %}
        background: url("{{ section.settings.image_mobile | image_url }}") no-repeat center;
      {% endif %}
    }

    #{{ section.id }} .c-rt-wrapper {
      width: 100%;
    }

    #{{ section.id }} .c-rt-button-div {
      flex-direction: column;
    }
  }
</style>


<section id="{{ section.id }}" class="c-section">
  <div class="page-width">
    <div class="c-section-top">
      {%- if section.settings.section_top_subheading != empty -%}<p class="c-section-top-subheading">{{ section.settings.section_top_subheading }}</p>{%- endif -%}
      {%- if section.settings.section_top_heading != empty -%}<h1>{{ section.settings.section_top_heading }}</h1>{%- endif -%}
      {%- if section.settings.section_top_paragraph != empty -%}<div class="c-t-80">{{ section.settings.section_top_paragraph }}</div>{%- endif -%}
    </div>
    <div class="c-rt-wrapper">
      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {% when 'PageHeading' %}
            <h1>
              {% if block.settings.show_page_title == true %}
                {{ page.title }}
              {% else %}
                {{ block.settings.page_heading }}
              {% endif %}
            </h1>
          {% when 'Heading' %}
            <h2>{{ block.settings.heading }}</h2>
          {% when 'Subheading' %}
            <p class="c-section-top-subheading">{{ block.settings.subheading }}</p>
          {% when 'Paragraph' %}
            <div style="margin: {{ block.settings.paragraph_margin }}; font-weight: {{ block.settings.paragraph_font_weight }};"
            class="c-rt-paragraph">{{ block.settings.paragraph }}</div>
          {% when 'Timer' %}
            <div class="c-rt-timer">
              <p id="timer-counter"></p>
            </div>
            
            <script>
              // Set the date we're counting down to
              var countDownDate = new Date('{{ block.settings.date }}').getTime();

              // Update the count down every 1 second
              var x = setInterval(function () {
                // Get today's date and time
                var now = new Date().getTime();

                // Find the distance between now and the count down date
                var distance = countDownDate - now;

                // Time calculations for days, hours, minutes and seconds
                var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                // Display the result in the element with id="demo"
                document.getElementById('timer-counter').innerHTML =
                  days + 'Days ' + hours + 'H ' + minutes + 'M ' + seconds + 'S ';

                // If the count down is finished, write some text
                if (distance < 0) {
                  clearInterval(x);
                  document.getElementById('timer-counter').innerHTML = 'EXPIRED';
                }
              }, 1000);
            </script>
        {%- endcase -%}
      {%- endfor -%}
      {%- if buttonBlocks != empty -%}
        <div class="c-rt-button-div">
          {%- for block in section.blocks -%}
            {%- case block.type -%}
              {%- when 'Button' -%}
                <a class="c-rt-button c-button {{ block.settings.button_style }}" href="{{ block.settings.button_url }}">{{ block.settings.button_text }}</a>
            {%- endcase -%}
          {%- endfor -%}
        </div>
      {%- endif -%}
    </div>
  </div>
</section>


{% schema %}
  {
    "name": "C Rich Text",
    "blocks": [
      {
        "name": "PageHeading",
        "type": "PageHeading",
        "limit": 50,
        "settings": [
          {
            "type": "text",
            "id": "page_heading",
            "label": "Heading",
            "default": "My heading"
          },
          {
            "type": "checkbox",
            "id": "show_page_title",
            "label": "Page Title",
            "default": false
          }
        ]
      },
      {
        "name": "Heading",
        "type": "Heading",
        "limit": 50,
        "settings": [
          {
            "type": "text",
            "id": "heading",
            "label": "Heading",
            "default": "My heading"
          }
        ]
      },
      {
        "name": "Subheading",
        "type": "Subheading",
        "limit": 50,
        "settings": [
          {
            "type": "text",
            "id": "subheading",
            "label": "Subheading",
            "default": "subheading"
          }
        ]
      },
      {
        "name": "Paragraph",
        "type": "Paragraph",
        "limit": 50,
        "settings": [
          {
            "type": "richtext",
            "id": "paragraph",
            "label": "Paragraph",
            "default": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse varius enim in eros elementum tristique. Duis cursus, mi quis viverra ornare.</p>"
          },
          {
            "type": "text",
            "id": "paragraph_margin",
            "label": "Paragraph margin",
            "default": "0em 0em 0em 0em"
          },
          {
            "type": "text",
            "id": "paragraph_font_weight",
            "label": "Paragraph font weight",
            "default": "inherit"
          }
        ]
      },
      {
        "name": "Button",
        "type": "Button",
        "limit": 50,
        "settings": [
          {
            "type": "text",
            "id": "button_text",
            "label": "Button Text",
            "default": "Buy Now"
          },
          {
            "type": "url",
            "id": "button_url",
            "label": "Button Link"
          },
          {
            "type": "text",
            "id": "button_style",
            "label": "Button Style",
            "default": "c-b1"
          }
        ]
      },
      {
        "name": "Timer",
        "type": "Timer",
        "limit": 50,
        "settings": [
          {
            "type": "text",
            "id": "date",
            "label": "Date",
            "default": "Jan 5, 2025 15:37:25",
            "info": "Enter the date and time in the format: Month Day, Year Hour:Minute:Second"
          }
        ]
      }
    ],
    "settings": [
      {
        "type": "select",
        "id": "blocks_alignment",
        "label": "Alignment",
        "default": "Center",
        "options": [
          {
            "value": "Left",
            "label": "Left"
          },
          {
            "value": "Center",
            "label": "Center"
          },
          {
            "value": "Right",
            "label": "Right"
          }
        ]
      },
      {
        "type": "range",
        "id": "section_width",
        "label": "Desktop section width",
        "min": 20,
        "max": 100,
        "step": 5,
        "default": 100,
        "unit": "%"
      },
      {
        "type": "image_picker",
        "id": "image",
        "label": "Background image"
      },
      {
        "type": "image_picker",
        "id": "image_mobile",
        "label": "Background image mobile"
      },
      {
        "type": "range",
        "id": "overlay",
        "label": "Background Overlay",
        "min": 0,
        "max": 1,
        "step": 0.1,
        "default": 0.5,
        "unit": "%"
      },
      {
        "type": "header",
        "content": "Section Colors"
      },
      {
        "type": "color",
        "id": "bg_color",
        "label": "Background color",
        "default": "#fff"
      },
      {
        "type": "color",
        "id": "text_color",
        "label": "Text color",
        "default": "#000"
      },
      {
        "type": "header",
        "content": "Section Top"
      },
      {
        "type": "text",
        "id": "section_top_subheading",
        "label": "Subheading",
        "default": "subheading"
      },
      {
        "type": "text",
        "id": "section_top_heading",
        "label": "Heading",
        "default": "My heading"
      },
      {
        "type": "richtext",
        "id": "section_top_paragraph",
        "label": "Paragraph",
        "default": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse varius enim in eros elementum tristique. Duis cursus, mi quis viverra ornare.</p>"
      },
      {
        "type": "select",
        "id": "section_top_alignment",
        "label": "Section Top Alignment",
        "default": "center",
        "options": [
          {
            "value": "flex-start",
            "label": "Left"
          },
          {
            "value": "center",
            "label": "Center"
          },
          {
            "value": "flex-end",
            "label": "Right"
          }
        ]
      },
      {
        "type": "select",
        "id": "text_alignment",
        "label": "Text alignment",
        "default": "center",
        "options": [
          {
            "value": "left",
            "label": "Left"
          },
          {
            "value": "center",
            "label": "Center"
          },
          {
            "value": "right",
            "label": "Right"
          }
        ]
      },
      {
        "type": "header",
        "content": "Section Padding"
      },
      {
        "type": "range",
        "id": "padding_top",
        "label": "Padding top",
        "min": 0,
        "max": 15,
        "step": 1,
        "default": 4,
        "unit": "rem"
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "label": "Padding bottom",
        "min": 0,
        "max": 15,
        "step": 1,
        "default": 4,
        "unit": "rem"
      }
    ],
    "presets": [
      {
        "name": "C Rich Text"
      }
    ]
  }
{% endschema %}